apiVersion: apps/v1
kind: Deployment
metadata:
  name: browser-agent-${SESSION_ID}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: browser-agent-${SESSION_ID}
  template:
    metadata:
      labels:
        app: browser-agent-${SESSION_ID}
    spec:
      containers:
        - name: browser-agent-test
          image: registry.digitalocean.com/browser-agent/browser-agent-test:latest
          env:
            - name: SESSION_ID
              value: "${SESSION_ID}"
            - name: OPENAI_API_KEY
              value: "${OPENAI_API_KEY}"
            - name: MONGODB_URI
              value: "${MONGODB_URI}"
            - name: MONGODB_DB_NAME
              value: "${MONGODB_DB_NAME}"
            - name: VAPID_PRIVATE_KEY
              value: "${VAPID_PRIVATE_KEY}"
            - name: S3_BUCKET
              value: "${S3_BUCKET}"
            - name: ACCESS_KEY
              value: "${ACCESS_KEY}"
            - name: SECRET_KEY
              value: "${SECRET_KEY}"
            - name: S3_ENDPOINT
              value: "${S3_ENDPOINT}"
            - name: ENV
              value: "dev"
          nodeSelector:
            kubernetes.io/arch: amd64
          ports:
            - containerPort: 8080
            - containerPort: 5900
            - containerPort: 6901
          securityContext:
            capabilities:
              add:
                - SYS_TIME
---
apiVersion: v1
kind: Service
metadata:
  name: browser-agent-service-${SESSION_ID}
spec:
  selector:
    app: browser-agent-${SESSION_ID}
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: browser-agent-ingress-${SESSION_ID}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/websocket-services: "browser-agent-service-${SESSION_ID}"
spec:
  tls:
  - hosts:
    - "${SESSION_ID}.dev-browser.allyson.ai"
    secretName: browser-tls-secret-1  
  rules:
  - host: "${SESSION_ID}.dev-browser.allyson.ai"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: browser-agent-service-${SESSION_ID}
            port: 
              number: 80